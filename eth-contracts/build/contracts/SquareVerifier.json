{
  "contractName": "SquareVerifier",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a723058204598b9ddfa0aa231ea6737a88ac7f3cc3b9454e169af4aa5e69f93ec8a4826700029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a723058204598b9ddfa0aa231ea6737a88ac7f3cc3b9454e169af4aa5e69f93ec8a4826700029",
  "sourceMap": "173:28:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:28:3;;;;;;;",
  "deployedSourceMap": "173:28:3:-;;;;;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./ERC721Mintable.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\ncontract SquareVerifier {\n\n}\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ImmoERC721Token {\n\n}\n\n\n// TODO define a solutions struct that can hold an index & an address\n\n\n// TODO define an array of the above struct\n\n\n// TODO define a mapping to store unique solutions submitted\n\n\n\n// TODO Create an event to emit when a solution is added\n\n\n\n// TODO Create a function to add the solutions to the array and emit the event\n\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/home/david2099/Documents/nodesall/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/home/david2099/Documents/nodesall/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7431
      ],
      "SquareVerifier": [
        7428
      ]
    },
    "id": 7432,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7426,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/david2099/Documents/nodesall/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7427,
        "nodeType": "ImportDirective",
        "scope": 7432,
        "sourceUnit": 1100,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7428,
        "linearizedBaseContracts": [
          7428
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7432,
        "src": "173:28:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7429,
              "name": "ImmoERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1099,
              "src": "337:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ImmoERC721Token_$1099",
                "typeString": "contract ImmoERC721Token"
              }
            },
            "id": 7430,
            "nodeType": "InheritanceSpecifier",
            "src": "337:15:3"
          }
        ],
        "contractDependencies": [
          63,
          657,
          1099,
          1064,
          955,
          118,
          164,
          7424
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7431,
        "linearizedBaseContracts": [
          7431,
          1099,
          1064,
          7424,
          955,
          657,
          164,
          118,
          63
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7432,
        "src": "306:51:3"
      }
    ],
    "src": "0:923:3"
  },
  "legacyAST": {
    "absolutePath": "/home/david2099/Documents/nodesall/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7431
      ],
      "SquareVerifier": [
        7428
      ]
    },
    "id": 7432,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7426,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/david2099/Documents/nodesall/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7427,
        "nodeType": "ImportDirective",
        "scope": 7432,
        "sourceUnit": 1100,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7428,
        "linearizedBaseContracts": [
          7428
        ],
        "name": "SquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7432,
        "src": "173:28:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7429,
              "name": "ImmoERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1099,
              "src": "337:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ImmoERC721Token_$1099",
                "typeString": "contract ImmoERC721Token"
              }
            },
            "id": 7430,
            "nodeType": "InheritanceSpecifier",
            "src": "337:15:3"
          }
        ],
        "contractDependencies": [
          63,
          657,
          1099,
          1064,
          955,
          118,
          164,
          7424
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7431,
        "linearizedBaseContracts": [
          7431,
          1099,
          1064,
          7424,
          955,
          657,
          164,
          118,
          63
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7432,
        "src": "306:51:3"
      }
    ],
    "src": "0:923:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-07T19:10:42.439Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}